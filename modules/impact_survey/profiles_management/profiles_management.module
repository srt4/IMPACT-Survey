<?php
/**
 * @files
 * Lets the administrators to manage all the profiles
 * 
 * List all the users, allow the administrators to select the users,
 * then list all the profiles the users have completed, allow the administrators to select the profile
 * 
 */


/** 
 * Implementation of hook_menu(). 
 * 
 * 
 */
function profiles_management_menu() { 
	
	$items['admin/profiles_management'] = array(
		'title' => 'Profiles Management',
		'description' => 'Manage the Profiles',
		'position' => 'right',
		'weight' => -5,
		//'page callback' => 'system_admin_menu_block_page',
		'page callback' => 'profiles_management_list',
		'access arguments' => array('administer site configuration'),
		'file' => 'system.admin.inc',
		'file path' => drupal_get_path('module','system'),
		'type' => MENU_NORMAL_ITEM,
	);
		
		$items['admin/profiles_management/%profiles_management_check_type/%profiles_management_check_uid'] = array(
		'title' => 'Profiles Management',
		'description' => 'Manage the Profiles',
		'page callback' => 'profiles_management_admin_view',
		'page arguments' => array(2,3),
		'access arguments' => array('administer site configuration'),	
		'file' => 'contrib/profile2_page.inc',
		'file path' => drupal_get_path('module','profile2'),
		'type' => MENU_NORMAL_ITEM,
	);
	
		$items['admin/profiles_management/%profiles_management_check_type/%profiles_management_check_uid/edit'] = array(
		'title' => 'Profiles Management',
		'description' => 'Manage the Profiles',
		'page callback' => 'profiles_management_admin_edit',
		'page arguments' => array(2,3),
		'access arguments' => array('administer site configuration'),	
		'file' => 'contrib/profile2_page.inc',
		'file path' => drupal_get_path('module','profile2'),
		'type' => MENU_NORMAL_ITEM,
	);
	
	return $items;
}

//the View of the profiles

function profiles_management_admin_view($type,$uid){
	
	//get the pid
	$sql="select pid from {profile} where uid=:uid and type=:type";
	$pid=db_query($sql,array('uid'=>$uid, 'type'=>$type))->fetchField();
	
	$profile = profile2_load($pid);

	$output = profile2_page_view($profile);
	
	$button = "<a href='".$uid."/edit'><input type='button'>Edit</input></a>";
	return render($output).$button;
}


//the Edit of the profiles

function profiles_management_admin_edit($type,$uid){
	
	//get the pid
	$sql="select pid from {profile} where uid=:uid and type=:type";
	$pid=db_query($sql,array('uid'=>$uid, 'type'=>$type))->fetchField();
	
	$profile = profile2_load($pid);
		
	$output=drupal_get_form('profile2_form', $profile);
	
	$button = "<a href='../".$uid."'><input type='button'>View</input></a>";

	return render($output).$button;
	
}

//hook_profile2_form_alter
function profiles_management_form_alter(&$form, &$form_state, $form_id) {
	
	//only works in this module
	$path = substr($_GET['q'],0,25);
	
	if($form_id=="profile2_form" && $path=='admin/profiles_management' ){
		$form['#submit'][1] = "profiles_management_profile2_submit";
	}

	if(isset($form['profile_library_registration']) && $path=='admin/profiles_management'){
		//$form['profile_library_registration']['field_library_reg_state']['und']['#default_value']="Select your state";
		unset($form['profile_library_registration']['field_library_reg_state']);
		unset($form['profile_library_registration']['field_library_reg_system']);
	}	
}

//a new submit function which is only for the profiles2 tables in profiles_management module
function profiles_management_profile2_submit($form, &$form_state){
	global $user;
	$uid=$user->uid;
	
	//edit the path
	if(isset($form['profile_imls_data'])) $type="imls_data";
	if(isset($form['profile_library_registration'])) $type="library_registration";
	if(isset($form['profile_intake_form'])) $type="intake_form";
	if(isset($form['profile_survey_fielding'])) $type="survey_fielding";
	if(isset($form['profile_photo_logo'])) $type="photo_logo";
	
	$form_state['redirect']="admin/profiles_management/profile-$type/$uid";
	drupal_set_message(t('The changes have been saved.'));
	
}


//check if it is the correct type
function profiles_management_check_type_load($type){
	
	//dpm ($type);
	switch($type){
		case "profile-library_registration":
			return "library_registration";
		case "profile-intake_form":
			return "intake_form";
		case "profile-imls_data":
			return "imls_data";
		case "profile-survey_fielding":
			return "survey_fielding";
		case "profile-photo_logo":
			return "photo_logo";
	}
	return FALSE;
}


//check whether the uid is valid

function profiles_management_check_uid_load($uid){
	if($uid && is_numeric($uid) && user_load($uid)) return $uid;
	return FALSE;	
}



//the profiles management table

function profiles_management_list(){
	
	//global $user;
	//$uid=$user->uid;
	
	$sql="select uid, name from {users} where uid>0 order by uid Asc";
	$users=db_query($sql);
	
	$profile = array();
	//get the name and uid
	foreach($users as $u){
		$profile[$u->uid]['name']=$u->name;
	}
	
	$sql="select uid, type, pid from {profile} order by uid Asc";
	$types=db_query($sql);
	
	$sql="select entity_id, field_library_reg_pref_value as system from {field_data_field_library_reg_pref}";
	$result=db_query($sql);
	
	foreach($result as $s){
		$system[$s->entity_id]=$s->system;
	}
	
	$no_pid='';
	
	//set the types
	foreach($types as $t){
		$profile[$t->uid][$t->type]="<a href='profiles_management/profile-".$t->type."/".$t->uid."'>YES</a>";
		if ($t->type=="library_registration") {
			if(isset($system[$t->pid])) $profile[$t->uid]['System']=$system[$t->pid];
			else  {$profile[$t->uid]['System']=$t->pid; $no_pid.=$t->pid.",";} //find out the pids which do not have the prefered name
		}
	}
	
	$no_pid=rtrim($no_pid,",");
	
	//get the library name if they do not have the prefered name
	$sql = "select s.entity_id, library_name from {library_lookup} as l, {field_data_field_library_reg_system} as s where l.fscs_key =s.field_library_reg_system_value  and s.entity_id in ($no_pid)";
	$result=db_query($sql);
	
	foreach($result as $r){
		$lib_sys[$r->entity_id]=$r->library_name;
	}
	
	$header=array(
		array('data' => "Library System"),
		array('data' => "User"),
		array('data' => "Registration Form"), 
		array('data' => "IMLS Data"),
		array('data' => "Intake Form"),
		array('data'=> "Survey Fielding"),
		array('data'=> "Photo&Logo")
		);
	
	
	foreach($profile as $key => $value){
			$rows[] = array(
				array('data' => isset($value['System'])?(is_numeric($value['System']) ? $lib_sys[$value['System']] : $value['System']):' '),
				array('data' => $value['name']),
				array('data' => isset($value['library_registration'])?$value['library_registration']:"<font color='grey'>NO</font>",'align'=>'center'),
				array('data' => isset($value['imls_data'])?$value['imls_data']:"<font color='grey'>NO</font>",'align'=>'center'),
				array('data' => isset($value['intake_form'])?$value['intake_form']:"<font color='grey'>NO</font>",'align'=>'center'),
				array('data' => isset($value['survey_fielding'])?$value['survey_fielding']:"<font color='grey'>NO</font>",'align'=>'center'),
				array('data' => isset($value['photo_logo'])?$value['photo_logo']:"<font color='grey'>NO</font>",'align'=>'center')
		);
	
	}

	$output = theme('table', array('header' => $header, 'rows' => $rows));
	return $output;
}


