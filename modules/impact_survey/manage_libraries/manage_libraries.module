<?php
/**
 * @files
 * Lets the administrators to manage all the profiles
 *
 * List all the users, allow the administrators to select the users,
 * then list all the profiles the users have completed, allow the administrators to select the profile
 *
 */
/**
 * Implementation of hook_menu().
 *
 *
 */
function manage_libraries_menu() {
  $items = array();

  $items['admin/manage_libraries'] = array(
		'title' => 'Manage Libraries',
		'description' => 'View/Update registered library information',
		'position' => 'right',
		'weight' => -5,
		'page callback' => 'manage_libraries_select_query',
		'access callback' => 'user_access',
		'access arguments' => array('profiles management'),
		'file' => 'system.admin.inc',
		'file path' => drupal_get_path('module','system'),
  );
  
  $items['admin/manage_libraries/default'] = array(
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'title' => 'All Libraries',
    'weight' => 0,
  );
  $items['admin/manage_libraries/beta'] = array(
		'title' => 'Beta Libraries',
		'description' => 'View and edit beta library information',
		'page callback' => 'manage_libraries_select_query',
    'page arguments' => array(array('105', '123', '97', '120', '115')),
		'access callback' => 'user_access',
		'access arguments' => array('profiles management'),	
    'type' => MENU_LOCAL_TASK,
    'weight' => 1,
  );
  $items['admin/manage_libraries/%manage_libraries_check_type/%manage_libraries_check_uid/view'] = array(
		'title' => 'hello',
		'title callback' => 'manage_libraries_get_library_name',
		'title arguments' => array(3),
		'description' => 'Manage the Profiles',
		'page callback' => 'manage_libraries_admin_view',
		'page arguments' => array(2,3),
		'access callback' => 'user_access',
		'access arguments' => array('profiles management'),	
		'file' => 'contrib/profile2_page.inc',
		'file path' => drupal_get_path('module','profile2'),
		'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/manage_libraries/%manage_libraries_check_type/%manage_libraries_check_uid/edit'] = array(
		'title' => 'Name Here',
		'title callback' => 'manage_libraries_get_library_name',
		'title arguments' => array(3),
		'description' => 'Manage the Profiles',
		'page callback' => 'manage_libraries_admin_edit',
		'page arguments' => array(2,3),
		'access callback' => 'user_access',
		'access arguments' => array('profiles management'),	
		'file' => 'contrib/profile2_page.inc',
		'file path' => drupal_get_path('module','profile2'),
		'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/manage_libraries/%manage_libraries_selected_users/custom'] = array(
		'title' => 'Filtered Profiles',
		'description' => 'Manage the Selected Profiles',
		'position' => 'right',
		'weight' => -5,
		'page callback' => 'manage_libraries_list_custom',
		'page arguments' => array(2),
		'access callback' => 'user_access',
		'access arguments' => array('profiles management'),
		'file' => 'system.admin.inc',
		'file path' => drupal_get_path('module','system'),
		'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/manage_libraries/%manage_libraries_selected_users/custom/%manage_libraries_check_type/%manage_libraries_check_uid/view'] = array(
		'title' => 'Custom Page',
		'title callback' => 'manage_libraries_get_library_name',
		'title arguments' => array(5),
		'description' => 'Manage the Profiles',
		'page callback' => 'manage_libraries_admin_view',
		'page arguments' => array(4,5),
		'access callback' => 'user_access',
		'access arguments' => array('profiles management'),	
		'file' => 'contrib/profile2_page.inc',
		'file path' => drupal_get_path('module','profile2'),
		'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/manage_libraries/%manage_libraries_selected_users/custom/%manage_libraries_check_type/%manage_libraries_check_uid/edit'] = array(
		'title' => 'Name Here',
		'title callback' => 'manage_libraries_get_library_name',
		'title arguments' => array(5),
		'description' => 'Manage the Profiles',
		'page callback' => 'manage_libraries_admin_edit', 
		'page arguments' => array(4,5),
		'access callback' => 'user_access',
		'access arguments' => array('profiles management'),	
		'file' => 'contrib/profile2_page.inc',
		'file path' => drupal_get_path('module','profile2'),
		'type' => MENU_NORMAL_ITEM,
  );
  
  return $items;
}
// Create an array with user data to display profiles
function manage_libraries_select_query($user_list = array()) {

  $header = array(
    array('data' => 'ID', 'field' => 'u.uid', 'sort' => 'asc'),
    array('data' => 'Library System', 'field' => 'pref_name'),
    array('data' => 'User', 'field' => 'username'),
    array('data' => 'Responses', 'field' => 'survey_responses'),
    array('data' => 'IMLS Data', 'field' => 'imls_stat'),
    array('data' => 'Intake Form', 'field' => 'intake_stat'),
    array('data' => 'Survey Fielding', 'field' => 'end_date'),
    array('data' => 'Photo&Logo', 'field' => 'pl_pid')
  );
  $table_data = db_select('users', 'u')->extend('TableSort')->orderByHeader($header);
  $table_data->addField('u', 'uid', 'uid');
  $table_data->addField('u', 'name', 'username');
  $table_data->addField($table_data->leftJoin('profile', 'reg', 'reg.uid = u.uid AND reg.type = :type_reg', array(':type_reg' => 'library_registration')), 'pid', 'reg_pid');
  $table_data->addField($table_data->leftJoin('field_data_field_library_reg_pref', 'pref', 'pref.entity_id = reg.pid'), 'field_library_reg_pref_value', 'pref_name');
  $table_data->addField($table_data->leftJoin('field_data_field_library_reg_system', 'fscs', 'fscs.entity_id = reg.pid'), 'field_library_reg_system_value', 'fscs_key');
  $table_data->addField($table_data->leftJoin('field_data_field_library_reg_fname', 'fname', 'fname.entity_id = reg.pid'), 'field_library_reg_fname_value', 'first_name');
  $table_data->addField($table_data->leftJoin('field_data_field_library_reg_lname', 'lname', 'lname.entity_id = reg.pid'), 'field_library_reg_lname_value', 'last_name');
  $table_data->addField($table_data->leftJoin('library_lookup', 'll', 'll.fscs_key = fscs.field_library_reg_system_value'), 'library_name', 'lib_name');
  $table_data->addField($table_data->leftJoin('profile', 'imls', 'imls.uid = u.uid AND imls.type = :type_imls', array(':type_imls' => 'imls_data')), 'pid', 'imls_pid');
  $table_data->addField($table_data->leftJoin('profile', 'intake', 'intake.uid = u.uid AND intake.type = :type_intake', array(':type_intake' => 'intake_form')), 'pid', 'intake_pid');
  $table_data->addField($table_data->leftJoin('myimpact_profile_status', 'imls_stat', 'imls_stat.uid = u.uid AND imls_stat.type = :stat_imls', array(':stat_imls' => 'imls_data')), 'status', 'imls_stat');
  $table_data->addField($table_data->leftJoin('myimpact_profile_status', 'intake_stat', 'intake_stat.uid = u.uid AND intake_stat.type = :stat_intake', array(':stat_intake' => 'intake_form')), 'status', 'intake_stat');
  $table_data->addField($table_data->leftJoin('profile', 'fielding', 'fielding.uid = u.uid AND fielding.type = :type_fielding', array(':type_fielding' => 'survey_fielding')), 'pid', 'fielding_pid');
  $table_data->leftJoin('field_data_field_fielding_date', 'date', 'date.entity_id = fielding.pid');
  $table_data->addField('date', 'field_fielding_date_value', 'start_date');
  $table_data->addField('date', 'field_fielding_date_value2', 'end_date');
  $table_data->addField($table_data->leftJoin('profile', 'pl', 'pl.uid = u.uid AND pl.type = :type_photo', array(':type_photo' => 'photo_logo')), 'pid', 'pl_pid');
  $table_data->addField($table_data->leftJoin('field_data_field_reg_library_pic', 'photo', 'photo.entity_id = pl.pid'), 'field_reg_library_pic_fid', 'photo_id');
  $table_data->addField($table_data->leftJoin('file_managed', 'photo_f', 'photo_f.fid = photo.field_reg_library_pic_fid'), 'filename', 'photo_loc');
  $table_data->addField($table_data->leftJoin('field_data_field_reg_logo_pic', 'logo', 'logo.entity_id = pl.pid'), 'field_reg_logo_pic_fid', 'logo_id');
  $table_data->addField($table_data->leftJoin('file_managed', 'logo_f', 'logo_f.fid = logo.field_reg_logo_pic_fid'), 'filename', 'logo_loc');
  $table_data->leftJoin('survey_responses', 'responses', 'responses.LibId = fscs.field_library_reg_system_value');
  $table_data->addExpression('COUNT(responses.LibId)', 'survey_responses');
  $table_data->groupBy('u.uid');
  if(empty($user_list))
    $table_data = $table_data->condition('u.uid', 0, '>');
  else
    $table_data = $table_data->condition('u.uid', $user_list, 'IN');

  $table_data = $table_data->execute();
  $rows = array();
  foreach ($table_data as $row) {
    $rows[] = array (
      array('data' => $row->uid),
      manage_libraries_fix_pref_name($row->pref_name, $row->lib_name, $row->uid, $row->fscs_key),
      manage_libraries_fix_user($row->username, $row->uid, $row->first_name, $row->last_name),
      $row->survey_responses,
      manage_libraries_fix_forms($row->uid, $row->imls_pid, $row->imls_stat, 'imls_data'),
      manage_libraries_fix_forms($row->uid, $row->intake_pid, $row->intake_stat, 'intake_form'),
      manage_libraries_fix_date($row->uid, $row->fielding_pid, $row->start_date, $row->end_date), 
      manage_libraries_fix_photo_logo($row->uid, $row->pl_pid, $row->photo_id, $row->photo_loc, $row->logo_id, $row->logo_loc),
    );
  }
  $variables = array(
    'header' => $header,
    'rows' => $rows,
    'attributes' => array(),
    'caption' => NULL,
    'colgroups' => array(),
    'sticky' => FALSE,
    'empty' => 'empty'
  );
  return theme_table($variables);
}
function manage_libraries_fix_pref_name($pref_name, $lib_name, $uid, $fscs_key) {
  $pref_name = array(
  	'data' => array(
    	'#markup' => isset($pref_name) ? $pref_name : (isset($lib_name) ? $lib_name : 'Library name not set'),
      '#prefix' => "<a href='profile-library_registration/$uid/view' title='$fscs_key'>",
      '#suffix' => '</a>'
    )
  );
  return $pref_name;
}
function manage_libraries_fix_user($username, $uid, $first_name, $last_name) {
  global $base_url;
  $user = array(
    'data' => array(
      '#markup' => $username,
      '#prefix' => "<a href='$base_url/user/$uid'>",
      '#suffix' => '</a>'
    )
  );
  return $user;
}
function manage_libraries_fix_forms ($uid, $pid, $status, $form_type) {
  if(empty($pid)) return 'Empty';
  
  global $base_url;
  $form = array(
  	'data' => array(
      '#markup' => ($status == 1) ? 'Submitted' : 'Saved',
      '#prefix' => "<a href='$base_url/admin/manage_libraries/profile-$form_type/$uid/view'>",
      '#suffix' => '</a>'
    )
  );
  return $form;
}
function manage_libraries_fix_date($uid, $pid, $start_date, $end_date) {
  if(empty($pid)) return 'Empty';
  if(empty($start_date)) return 'Invalid';
  if(empty($end_date)) return 'Invalid';
  
  $fix_start = isset($start_date) ? date('D m/d/y', strtotime($start_date)) : 'Empty';
  $fix_end = isset($end_date) ? ' -<br>' . date('D m/d/y', strtotime($end_date)) : '';
  
  global $base_url;
  $fielding = array(
    'data' => array(
      '#markup' => $fix_start . $fix_end,
      '#prefix' => "<a href='$base_url/admin/manage_libraries/profile-survey_fielding/$uid/view'>",
      '#suffix' => '</a>'
    )
  );  
  return $fielding;
}
function manage_libraries_fix_photo_logo($uid, $pid, $photo_id, $photo_loc, $logo_id, $logo_loc) {
  if(empty($pid)) return 'Empty';
  global $base_url;
  $photo_path = $base_url .'/'. variable_get('file_public_path', conf_path() . '/files') . "/styles/table-thumb/public/photo_logo/photos/$photo_loc";
  $logo_path = $base_url .'/'. variable_get('file_public_path', conf_path() . '/files') . "/styles/table-thumb/public/photo_logo/logos/$logo_loc";

  $logo_id = isset($logo_id) ? $logo_id : 'X';
  
  global $base_url;
  $pl = array(
    'data' => array(
      '#markup' => "<img src='$photo_path'><img src='$logo_path'>",
      '#prefix' => "<a href='$base_url/admin/manage_libraries/profile-photo_logo/$uid/view'>",
      '#suffix' => '</a>'
    )
  );
  return $pl;
}
/*
 * The View page of the forms
 */
function manage_libraries_admin_view($type,$uid){

  //get the pid
  $sql="select pid from {profile} where uid=:uid and type=:type";
  $pid=db_query($sql,array('uid'=>$uid, 'type'=>$type))->fetchField();

  $profile = profile2_load($pid);

  $output = profile2_page_view($profile);

  $button = "<a href='./edit'><input type='submit' id='edit_submit' name='op' class='form-submit' value='Edit'></a>";
  return render($output).$button;
}


/*
 * The Edit page of the forms
 */
function manage_libraries_admin_edit($type,$uid){

  //get the pid
  $sql="select pid from {profile} where uid=:uid and type=:type";
  $pid=db_query($sql,array('uid'=>$uid, 'type'=>$type))->fetchField();

  $profile = profile2_load($pid);

  $output=drupal_get_form('profile2_form', $profile);

  //$button = "<a href='../".$uid."'><input type='button value='View'>View</input></a>";

  return render($output);

}


/*
 * get the library name based on the uid
 */
function manage_libraries_get_library_name($uid=NULL){

  //get the pid
  $sql="select pid from {profile} where uid=:uid and type='library_registration'";
  $pid=db_query($sql,array('uid'=>$uid))->fetchField();

  //get the prefered name
  $sql="select field_library_reg_pref_value from {field_data_field_library_reg_pref} where entity_id=:pid";
  $preName=db_query($sql, array('pid'=>$pid))->fetchField();

  if(empty($preName)){
    //get the libaray name
    $sql="select library_name from {library_lookup} as l, {field_data_field_library_reg_system} as s where l.fscs_key =s.field_library_reg_system_value  and s.entity_id=:pid";
    $libName=db_query($sql, array('pid'=>$pid))->fetchField();

    return $libName;
  }
  else return $preName;
}

/*
 * display all the users in one table
 *
 */
function manage_libraries_list(){


  $output="<br><a href='manage_libraries/AACPL_WA0064_ebaker_karenp_King County Library System/custom'>Five Selected Libraries</a><br><br>";

  $output.=manage_libraries_display();

  return $output;

}


// Assemble the table array
function manage_libraries_display($library_list = array()){
  $profile_data = manage_libraries_table_data($library_list);

  $header = array(
  array('data' => 'Library System'),
  array('data' => 'User'),
  array('data' => 'Result Count'),
  array('data' => 'IMLS Data'),
  array('data' => 'Intake Form'),
  array('data' => 'Survey Fielding'),
  array('data' => 'Photo&Logo'),
  );

  $rows = array();
  foreach($profile_data as $user_data) {
    _manage_libraries_complete_data_fields($user_data);
    $rows[] = array(
    array('data' => $user_data->system_pref, 'title' => $user_data->fscs_key),
    array('data' => $user_data->username, 'title' => $user_data->first_name.' '.$user_data->last_name),
    array('data' => $user_data->responses),
    array('data' => isset($user_data->imls_pid) ? "<a href='manage_libraries/profile-imls_data/$user_data->uid/view'>Yes</a>" : 'No'),
    array('data' => isset($user_data->intake_pid) ? "<a href='manage_libraries/profile-intake_form/$user_data->uid/view'>Yes</a>" : 'No'),
    array('data' => isset($user_data->start_date) ? "<a href='manage_libraries/profile-photo_logo/$user_data->uid/view'>$user_data->start_date$user_data->end_date</a>" : $user_data->start_date.$user_data->end_date),
    array('data' => (isset($user_data->photo_id) || isset($user->logo_id)) ? "<a href='manage_libraries/profile-photo_logo/$user_data->uid/view'>view</a>" : 'No Photo/Logo')
    );
  }

  $output = '';
  if(empty($library_list))
  $output .= '<br><a href="manage_libraries/AACPL_WA0064_ebaker_karenp_King County Library System/custom">Five Selected Libraries</a><br><br>';
  $output .= theme('table', array('header' => $header, 'rows' => $rows));
  return $output;
}
// helper method to fill in fields
function _manage_libraries_complete_data_fields(&$user_data) {
  $user_data->system_pref = isset($user_data->system_pref) ? "<a href='manage_libraries/profile-library_registration/$user_data->uid/view'>$user_data->system_pref</a>" : 'No Preferred Name';
  $user_data->username = isset($user_data->username) ? $user_data->username : 'No Username';
  $user_data->start_date = isset($user_data->start_date) ? date('D m/d/y', strtotime($user_data->start_date)) : 'Empty';
  $user_data->end_date = isset($user_data->end_date) ? ' - ' . date('D m/d/y', strtotime($user_data->end_date)) : '';
  /*
   $rows[] = array(
   array('data' => isset($value['System'])?(is_numeric($value['System']) ? (isset($lib_sys[$value['System']])?$lib_sys[$value['System']]:" ") : $value['System']):' ', 'title'=>isset($value['fscs'])?$value['fscs']:'No FSCS'),
   array('data' => isset($value['name'])? $value['name']:" ", 'title'=>(isset($value['fullName']))?$value['fullName']:"empty"),
   array('data' => $result_count),
   array('data' => isset($value['library_registration'])?$value['library_registration']:"<font color='grey'>NO</font>",'align'=>'center'),
   array('data' => isset($value['imls_data'])?$value['imls_data']:"<font color='grey'>NO</font>",'align'=>'center'),
   array('data' => isset($value['intake_form'])?$value['intake_form']:"<font color='grey'>NO</font>",'align'=>'center'),
   array('data' => isset($value['survey_fielding'])?$value['survey_fielding']:"<font color='grey'>NO</font>",'align'=>'center'),
   array('data' => isset($value['photo_logo'])?$value['photo_logo']:"<font color='grey'>NO</font>",'align'=>'center')
   );*/
}

// Add a permission to access profile management
function manage_libraries_permission(){
  return array(
		'profiles management' => array ( 
			'title' => t('Manage the profiles'), 
			'description' => t('Allow users to manageme the profiles in Profiles Management'),
    ),
  );
}

/*
 * hook_process_breadcrumb
 *
 * add the library name in view and edit page
 */
function manage_libraries_preprocess_breadcrumb(&$variables){

  $path=explode('/',$_GET['q']);
  $count=count($path);

  if(isset($path['0']) && $path['0']=='admin' && isset($path['1']) && $path['1']=='manage_libraries' && ($path[($count-1)]=="view" or $path[($count-1)]=="edit") ){

    //display the library name at the breadcrumb
    $uid=$path[($count-2)];
    $variables['breadcrumb'][]=manage_libraries_get_library_name($uid);

  }
}
/*
 * check whether the type in address is correct
 */
function manage_libraries_check_type_load($type){

  $type=manage_libraries_convert_path_type($type);

  return $type;
}

/*
 * convert the path to the real type
 */
function manage_libraries_convert_path_type($path){

  switch($path){
    case "profile-library_registration":
      return "library_registration";
    case "profile-intake_form":
      return "intake_form";
    case "profile-imls_data":
      return "imls_data";
    case "profile-survey_fielding":
      return "survey_fielding";
    case "profile-photo_logo":
      return "photo_logo";
  }
  return FALSE;

}
/*
 * check the uid
 *
 */
function manage_libraries_check_uid_load($uid){
  if($uid && is_numeric($uid) && user_load($uid)) return $uid;
  return FALSE;
}
/**
 * Implements hook_image_default_styles().
 */
function manage_libraries_image_default_styles() {
  $styles = array();
  
  $styles['table-thumb'] = array(
    'effects' => array(
      array(
        'name' => 'image_scale', 
        'data' => array(
          'width' => 50,
          'height' => 50,
          'upscale' => 0,), 
        'weight' => 0,
      ),
    ),
  );

  return $styles;
}